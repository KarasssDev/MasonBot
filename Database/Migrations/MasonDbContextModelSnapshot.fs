// <auto-generated />
namespace Database.Migrations

open System
open Database
open Microsoft.EntityFrameworkCore
open Microsoft.EntityFrameworkCore.Infrastructure
open Microsoft.EntityFrameworkCore.Metadata
open Microsoft.EntityFrameworkCore.Migrations
open Microsoft.EntityFrameworkCore.Storage.ValueConversion

[<DbContext(typeof<Connection.MasonDbContext>)>]
type MasonDbContextModelSnapshot() =
    inherit ModelSnapshot()

    override this.BuildModel(modelBuilder: ModelBuilder) =
        modelBuilder.HasAnnotation("ProductVersion", "6.0.9") |> ignore

        modelBuilder.Entity("Database.Connection+User", (fun b ->

            b.Property<int>("TelegramId")
                .IsRequired(true)
                .ValueGeneratedOnAdd()
                .HasColumnType("INTEGER")
                |> ignore

            b.Property<string>("Wallet")
                .IsRequired(true)
                .HasColumnType("TEXT")
                |> ignore

            b.HasKey("TelegramId")
                |> ignore


            b.ToTable("Users") |> ignore

        )) |> ignore

        modelBuilder.Entity("Database.Connection+Variant", (fun b ->

            b.Property<int>("Id")
                .IsRequired(true)
                .ValueGeneratedOnAdd()
                .HasColumnType("INTEGER")
                |> ignore

            b.Property<string>("Description")
                .IsRequired(true)
                .HasColumnType("TEXT")
                |> ignore

            b.Property<Nullable<int>>("VotingId")
                .IsRequired(false)
                .HasColumnType("INTEGER")
                |> ignore

            b.HasKey("Id")
                |> ignore


            b.HasIndex("VotingId")
                |> ignore

            b.ToTable("Variants") |> ignore

        )) |> ignore

        modelBuilder.Entity("Database.Connection+Vote", (fun b ->

            b.Property<int>("Id")
                .IsRequired(true)
                .ValueGeneratedOnAdd()
                .HasColumnType("INTEGER")
                |> ignore

            b.Property<string>("Description")
                .IsRequired(true)
                .HasColumnType("TEXT")
                |> ignore

            b.Property<Nullable<int>>("UserTelegramId")
                .IsRequired(false)
                .HasColumnType("INTEGER")
                |> ignore

            b.Property<Nullable<int>>("VariantId")
                .IsRequired(false)
                .HasColumnType("INTEGER")
                |> ignore

            b.HasKey("Id")
                |> ignore


            b.HasIndex("UserTelegramId")
                |> ignore


            b.HasIndex("VariantId")
                |> ignore

            b.ToTable("Votes") |> ignore

        )) |> ignore

        modelBuilder.Entity("Database.Connection+Voting", (fun b ->

            b.Property<int>("Id")
                .IsRequired(true)
                .ValueGeneratedOnAdd()
                .HasColumnType("INTEGER")
                |> ignore

            b.Property<Nullable<int>>("CreatorTelegramId")
                .IsRequired(false)
                .HasColumnType("INTEGER")
                |> ignore

            b.Property<string>("Description")
                .IsRequired(true)
                .HasColumnType("TEXT")
                |> ignore

            b.HasKey("Id")
                |> ignore


            b.HasIndex("CreatorTelegramId")
                |> ignore

            b.ToTable("Votings") |> ignore

        )) |> ignore
        modelBuilder.Entity("Database.Connection+Variant", (fun b ->
            b.HasOne("Database.Connection+Voting", "Voting")
                .WithMany()
                .HasForeignKey("VotingId")
                |> ignore

        )) |> ignore
        modelBuilder.Entity("Database.Connection+Vote", (fun b ->
            b.HasOne("Database.Connection+User", "User")
                .WithMany()
                .HasForeignKey("UserTelegramId")
                |> ignore
            b.HasOne("Database.Connection+Variant", "Variant")
                .WithMany()
                .HasForeignKey("VariantId")
                |> ignore

        )) |> ignore
        modelBuilder.Entity("Database.Connection+Voting", (fun b ->
            b.HasOne("Database.Connection+User", "Creator")
                .WithMany()
                .HasForeignKey("CreatorTelegramId")
                |> ignore

        )) |> ignore

